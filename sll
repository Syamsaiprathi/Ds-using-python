class node:
    def __init__(self,data):
        self.data=data
        self.ref=None
class LinkedList:
    def __init__(self):
        self.head=None
    def print_ll(self):
        if self.head is None:
            print("Linked List is empty")
        else:
            n=self.head
            while n is not None:
                print(n.data,end="-->")
                n=n.ref
    def add_begin(self,data):
        newnode=node(data)
        newnode.ref=self.head
        self.head=newnode
    def add_end(self,data):
        n=self.head
        newnode=node(data)
        if n is None:
            n=newnode
        else:
            while n.ref is not None:
                n=n.ref
            n.ref=newnode
    def add_after(self,data,x):
        n=self.head
        while n is not None:
            if x == n.data:
                break
            n=n.ref
        if n is None:
            print("No node to insert after")
        else:
            newnode=node(data)
            newnode.ref=n.ref
            n.ref=newnode
ll1=LinkedList()
ll1.add_begin(10)
ll1.add_begin(20)
ll1.add_end(30)
ll1.add_after(40, 20)
ll1.print_ll()

Output:
runfile('C:/Users/joker/untitled0.py', wdir='C:/Users/joker')
20-->40-->10-->30-->
